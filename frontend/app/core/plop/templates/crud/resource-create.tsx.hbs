import AppLayout from '~/core/layouts/app-layout'
import { setMeta } from '~/core/lib/meta'
import { create{{pascalSingular}} } from './api'
import { useResourceForm } from '~/core/hooks/use-resource-form'
import InputField from '~/components/forms/input-field'
import FormActions from '~/components/forms/form-actions'
import type { BreadcrumbItem } from '~/core/types'
import type { {{pascalSingular}} } from './types'
import { useNavigate } from 'react-router'

const title = 'Create {{titleSingular}}'

export function meta() {
    return setMeta(title)
}

export default function {{pascalSingular}}CreatePage() {
    const navigate = useNavigate()

    const { form, onSubmit, recentlySuccessful, isSubmitting } = useResourceForm<{{pascalSingular}}>({
        create: create{{pascalSingular}},
        onSuccess: ({{camelSingular}}) => {
            navigate(`/{{kebabPlural}}/{{dollarVar camelSingular}}.id}`, { replace: true })
        }
    })

    const { register, formState: { errors } } = form

    const breadcrumbs: BreadcrumbItem[] = [
        { title: '{{titlePlural}}', href: '/{{kebabPlural}}' },
        { title: title, href: '/{{kebabPlural}}/create' },
    ]

    return (
        <AppLayout breadcrumbs={breadcrumbs}>
            <form onSubmit={onSubmit} className="max-w-lg p-4 space-y-6">
                <InputField
                    name="name"
                    label="Name"
                    autoComplete="name"
                    disabled={isSubmitting}
                    register={register('name')}
                    error={errors.name}
               />

               <FormActions
                   backTo="/{{kebabPlural}}"
                   backLabel="Cancel"
                   isSubmitting={isSubmitting}
                   recentlySuccessful={recentlySuccessful}
               />
           </form>
       </AppLayout>
   )
}