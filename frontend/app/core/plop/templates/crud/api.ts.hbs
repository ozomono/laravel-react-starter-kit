import type { {{pascalSingular}} } from './types'
import { unwrapData } from '~/core/lib/utils'
import { api } from '~/core/axios/axios'
import type { TableQueryParams } from '~/components/table/types'
import { buildQueryParams } from '~/components/table/query-params'

export function get{{pascalPlural}}(params: TableQueryParams) {
    return api.get('/{{kebabPlural}}', { params: buildQueryParams(params) })
}

export const get{{pascalSingular}} = (id: number | string): Promise<{{pascalSingular}}> =>
    unwrapData<{{pascalSingular}}>(api.get<{ data: {{pascalSingular}} }>(`{{kebabPlural}}/${id}`))

export const create{{pascalSingular}} = (payload: {{pascalSingular}}): Promise<{{pascalSingular}}> =>
    unwrapData<{{pascalSingular}}>(api.post<{ data: {{pascalSingular}} }>('{{kebabPlural}}', payload))

export const update{{pascalSingular}} = (id: number | string, payload: {{pascalSingular}}): Promise<{{pascalSingular}}> =>
    unwrapData<{{pascalSingular}}>(api.put<{ data: {{pascalSingular}} }>(`{{kebabPlural}}/${id}`, payload))

export const delete{{pascalSingular}} = (id: number | string): Promise<{{pascalSingular}}> =>
    unwrapData<{{pascalSingular}}>(api.delete<{ data: {{pascalSingular}} }>(`{{kebabPlural}}/${id}`))
